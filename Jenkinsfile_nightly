#!groovy

properties([
        pipelineTriggers([cron('00 21 * * *')]),
        parameters([
                string(name: 'ENVIRONMENT', defaultValue: 'aat', description: 'Environment to test'),
                string(name: 'IDAM_API_BASE_URI', defaultValue: 'https://idam-api.aat.platform.hmcts.net', description: 'The URL you want to run these tests against'),
                string(name: 'IDAM_WEBSHOW_WHITELIST', defaultValue: 'https://em-show-aat.service.core-compute-aat.internal/oauth2/callback', description: 'The IDAM API Url to create and delete users from'),
                string(name: 'S2S_BASE_URI', defaultValue: 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal', description: 'The CCD Case Create Url')
                string(name: 'FUNCTIONAL_TEST_CLIENT_S2S_TOKEN', defaultValue: 'ZTUJMGDXR4ATXB4O', description: 'The IDAM API Url to create and delete users from'),
                string(name: 'FUNCTIONAL_TEST_CLIENT_OAUTH_SECRET', defaultValue: 'QfnbQkh2cvROJDe9tFE3WNfD4a0Q2w8Q', description: 'The CCD Case Create Url')

        ])
])



@Library("Infrastructure") 


def product = "docAssembly"
def component = "Doc Generation"





withNightlyPipeline("java", product, component) {
    env.IDAM_API_BASE_URI =params.IDAM_API_BASE_URI
    env.IDAM_WEBSHOW_WHITELIST =params.IDAM_WEBSHOW_WHITELIST
    env.FUNCTIONAL_TEST_CLIENT_S2S_TOKEN =params.FUNCTIONAL_TEST_CLIENT_S2S_TOKEN
    env.FUNCTIONAL_TEST_CLIENT_OAUTH_SECRET =params.FUNCTIONAL_TEST_CLIENT_OAUTH_SECRET

    setVaultName('dg-docassembly')
    loadVaultSecrets(secrets)

    enablePerformanceTest()

    after('performanceTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

    //enableSlackNotifications('#jui-nightly-builds')



}
